import React, { useState, useEffect } from "react";
import "./LoadingAnimation.css";

const Bird1 = () => (
  <svg width="1200" height="1200" viewBox="0 0 1200 1200" fill="none">
    <path
      d="M842.488 936.883C839.584 983.181 846.838 1014.56 858.337 1069.66C865.333 1030.13 869.439 1008.07 863.119 961.608C900.727 966.344 920.499 988.5 963.681 1010.9C947.719 974.329 935.659 954.265 895.351 921.206C918.499 913.405 943.499 919.795 1006.79 910.343C963.096 892.532 936.535 884.485 873.5 884.839C868.842 818.857 849.999 780.5 824.825 749.528C982.657 665 1006.04 553.773 927.894 414.528C895.937 313.29 928.712 273.335 1051.77 324.833C833.206 66.7921 672.757 239.094 741.134 403.005M842.488 924.737C822.272 847.009 816.499 805.5 785.024 772.601C717.352 787.408 698.45 779.189 637.048 734L594.499 749.528C565.956 830.818 537.815 866.487 481.071 924.737C532.18 961.608 542.999 944 582.499 1001.56C532.933 987.544 507.779 979.03 471.878 961.608C491.81 998.862 498.252 1017.49 503.947 1047.93C466.772 1011.01 449.001 990.651 434.379 956.237C380.984 950.923 353.752 943.853 304.509 932.246C350.925 921.539 375.499 928 434.379 919.795C480.689 862.393 504.319 828.906 532.18 761.202C410.999 772.601 304.509 761.202 149.499 808C191.344 751.499 175.556 770.327 236.499 719C281.999 690 321.999 664.5 379.298 636.917C273.63 582.988 217.796 503.99 138.863 451C174.846 445.204 215.999 451 260.527 451C342.385 470.572 367.571 502.074 471.878 528.081C555.042 445.93 601.485 406.869 732.508 378.181M824.825 236.815C860.732 237.277 881.345 240.135 920.276 257.006C889.541 245.845 872.59 240.944 845.204 246.018"
      stroke="var(--textDefault)"
      strokeWidth="30"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const Bird2 = () => (
  <svg width="1200" height="1200" viewBox="0 0 1200 1200" fill="none">
    <path
      d="M592.5 994.002C570.433 1008.95 555.389 1022.1 536.5 1041C572.645 1039.76 590.569 1036.03 619.5 1025.5C663.2 1055.48 689.325 1066.75 736.433 1085C716.601 1059.65 705.188 1045.42 676 1019.5C710.5 1019.5 738.023 1019.79 773 1009.5C725 993.002 699.5 993.002 659 987.002C699.465 914.036 717.988 870.006 719.5 767.844M684.236 380.847C553.212 409.535 517.5 459 466.379 532.083C362.072 506.076 321.078 514.085 239.22 494.512C193.202 496.025 170.312 498.12 134.33 503.916C213.263 556.907 268.131 586.99 373.799 640.919C329.085 686.746 304.435 712.904 255.028 753.531C194.084 804.857 175.209 837.777 133.364 894.278C309 850.002 444.287 836.295 553.5 781.002L667 772M692.862 405.671C624.484 241.76 784.934 69.4586 1003.5 327.5C889.416 279.758 852.926 310.614 873.672 396.031C877.083 410.076 884.865 422.644 893.939 433.893C999.968 565.328 955.609 702.943 781.5 760.502C772.773 795.758 774.206 817.143 781.5 856.502C815.218 864.346 833.023 873.463 862.933 897.002C919 907.002 951.575 914.687 1003.5 945.502C961.307 945.791 937.405 945.649 890.5 940.002C921.097 980.863 929.141 1002.42 944.5 1041C905.332 999.848 875 981.502 850.5 949.778C833.885 982.023 823.447 995.227 805 1019.5C809.567 975.133 812.827 950.866 828.933 916.502C796.126 893.93 775.733 886.818 736.433 881.502C730.04 835.361 728.496 809.887 736.433 766.502L719.5 767.844M776.553 239.481C812.46 239.943 833.072 242.801 872.003 259.673C841.269 248.511 824.317 243.611 796.932 248.685M719.5 767.844L667 772M667 772C668.467 872.349 648.5 897.002 612 967.002"
      stroke="var(--textDefault)"
      strokeWidth="30"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const Bird3 = () => (
  <svg width="1200" height="1200" viewBox="0 0 1200 1200" fill="none">
    <path
      d="M870.383 937.32C866.741 992.277 874.478 1020 886.232 1070.1C890.748 1031.09 893.151 1009.06 891.014 962.045C929.867 990.432 951.978 999.042 991.577 1011.34C970.187 973.758 950.5 956 923.246 921.643C967.925 923.36 992.213 920.364 1034.68 910.779C978.5 894.5 954.096 884.954 901.395 885.276C873.815 824.506 852.655 793.022 798.326 744.528C956.158 660 979.543 548.773 901.395 409.528C869.437 308.29 902.213 268.335 1025.27 319.833C806.707 61.7922 646.258 234.094 714.635 398.005M877.288 926.159C836.144 853.664 810.964 817.322 758.525 767.601C690.853 782.408 671.951 774.189 610.549 729M610.549 729C583.947 822.188 554.872 862.904 492.07 926.585C530 958.085 555.868 967.405 593.498 1003.4C548.939 995.369 524.206 989.417 482.876 963.456C500.866 998.547 506.224 1017.03 514.946 1049.78C474.014 1011.48 455.838 990.874 445.378 958.085C397 950 365.042 949.55 315.508 934.094C363.917 926.153 391.5 926.585 445.378 921.643C493.896 856.103 531.702 813.298 549 739M610.549 729L549 739M549 739C419.001 779 272.001 739 112.363 779C154.208 722.499 183.001 703.544 217.001 688.5C266.001 666.818 290.501 648.5 350.001 618C244.333 564.071 191.296 477.99 112.363 425C148.345 419.204 195.501 429.143 243 440.5C324.858 460.072 341.071 497.074 445.378 523.081C528.543 440.93 574.985 401.869 706.009 373.181M798.326 231.815C834.233 232.277 854.845 235.135 893.777 252.006C863.042 240.845 846.091 235.944 818.705 241.018"
      stroke="var(--textDefault)"
      strokeWidth="30"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const Bird4 = () => (
  <svg width="1200" height="1200" viewBox="0 0 1200 1200" fill="none">
    <path
      d="M804.003 735.498C959.644 676.253 998.099 532.614 875.763 422.254C860.085 408.111 846.437 390.958 842.343 370.244C827.022 292.717 865.077 266.249 974.449 312.018C755.882 53.9772 595.433 226.279 663.81 390.19M804.003 735.498C781.757 772.128 778.503 789.498 778.503 816.998C822.514 811.494 850.12 823.781 894.003 836.498C946.849 828.832 976.529 828.156 1029.5 828.998C989.008 837.111 966.197 842.614 924.003 866.498C963.535 887.298 982.227 903.502 1012 936.998C1025 948.498 986.503 936.998 969.503 930.498C939.421 912.626 928.826 913.314 902.503 913.498C921.003 964.498 933.003 1038 924.003 1019.5C906.003 1001 878.718 933.814 869.503 878.998C814.517 863.972 783.16 859.136 725.003 864.498C722.472 818.122 725.773 791.595 747.503 742.498M804.003 735.498C780.097 740.706 768.114 741.732 747.503 742.498M512.503 972.998C485.534 982.963 473.362 991.644 452.003 1007.5C495.605 1004.61 519.637 1002.44 555.003 988.498C597.003 1027.5 598.503 1051 655.503 1079.5C643.135 1045.04 636.157 1025.71 609.003 988.498C652.631 982.445 677.091 979.052 720.719 972.998C669.573 954.805 641.003 955.998 590.21 955.998C605.061 878.936 614.824 835.151 668.503 742.498L747.503 742.498M655.184 365.366C555.003 390.19 512.503 443 460.088 514.079C355.781 488.073 314.788 496.081 232.93 476.509C186.911 478.021 164.022 480.116 128.039 485.913C206.972 538.903 261.84 568.986 367.508 622.915C322.795 668.743 298.145 694.901 248.737 735.527C187.794 786.853 168.918 819.774 127.073 876.274C302.71 831.998 437.997 818.291 547.21 762.998L615.003 742.498C562.024 819.18 549.251 867.512 533.71 955.998M747.501 224C783.408 224.462 804.02 227.32 842.951 244.191C812.217 233.03 795.265 228.129 767.88 233.203"
      stroke="var(--textDefault)"
      strokeWidth="30"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const svgs = [<Bird1 />, <Bird2 />, <Bird3 />, <Bird4 />];

// Principal function that uses `onComplete`
const LoadingAnimation = ({ duration = 1200, onComplete }) => {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [isVisible, setIsVisible] = useState(true);

  useEffect(() => {
    // Cycle through the SVGs every 300ms
    const interval = setInterval(() => {
      setCurrentIndex((prevIndex) => (prevIndex + 1) % svgs.length);
    }, 300);

    // Handle visibility and call `onComplete` after the duration
    const timeout = setTimeout(() => {
      setIsVisible(false);
      if (typeof onComplete === "function") {
        onComplete(); // Notify parent component
      }
    }, duration);

    return () => {
      clearInterval(interval);
      clearTimeout(timeout);
    };
  }, [duration, onComplete]); // Ensure dependencies are stable

  if (!isVisible) return null;

  return (
    <div className="loading-animation">
    {svgs[currentIndex]}
  </div>
  );
};

// Secondary function that doesn't handle `onComplete` (infinite loop)
export const LoadingAnimationWithoutComplete = ({ id, ...props }) => {
  const [currentIndex, setCurrentIndex] = useState(0);

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentIndex((prevIndex) => (prevIndex + 1) % svgs.length);
    }, 300);

    return () => {
      clearInterval(interval);
    };
  }, []);

  return (
    <div id={id} className="loading-animation" {...props}>
      {svgs[currentIndex]}
    </div>
  );
};


export default LoadingAnimation;
